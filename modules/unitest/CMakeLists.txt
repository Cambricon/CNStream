if(build_tests)
  include_directories(${PROJECT_SOURCE_DIR}/modules/unitest/include/)
  include_directories(${PROJECT_SOURCE_DIR}/modules/core/src)

  file(GLOB_RECURSE test_core_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/core/*.cpp)
  set(test_srcs ${test_core_srcs})
  list(APPEND test_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/test_base.cpp)
  list(APPEND test_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/test_main.cpp)
  if(build_encode)
    include_directories(${PROJECT_SOURCE_DIR}/modules/encode/src)
    file(GLOB_RECURSE test_encode_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/encode/*.cpp)
    list(APPEND test_srcs ${test_encode_srcs})
  endif()
  if(build_fps_stats)
    include_directories(${PROJECT_SOURCE_DIR}/modules/fps_stats/src)
    file(GLOB_RECURSE test_fps_stats_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/fps_stats/*.cpp)
    list(APPEND test_srcs ${test_fps_stats_srcs})
  endif()
  if(build_inference)
    include_directories(${PROJECT_SOURCE_DIR}/modules/inference/src)
    file(GLOB_RECURSE test_infer_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/inference/*.cpp)
    list(APPEND test_srcs ${test_infer_srcs})
  endif()
  if(build_osd)
    include_directories(${PROJECT_SOURCE_DIR}/modules/osd/src)
    file(GLOB_RECURSE test_osd_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/osd/*.cpp)
    list(APPEND test_srcs ${test_osd_srcs})
  endif()
  if(build_source)
    include_directories(${PROJECT_SOURCE_DIR}/modules/source/src)
    file(GLOB_RECURSE test_source_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/source/*.cpp)
    list(APPEND test_srcs ${test_source_srcs})
  endif()
  if(build_track)
    include_directories(${PROJECT_SOURCE_DIR}/modules/track/src)
    file(GLOB_RECURSE test_track_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/track/*.cpp)
    list(APPEND test_srcs ${test_track_srcs})
  endif()
    include_directories(${PROJECT_SOURCE_DIR}/modules/display/src)
    file(GLOB_RECURSE test_display_srcs ${PROJECT_SOURCE_DIR}/modules/unitest/display/*.cpp)
    list(APPEND test_srcs ${test_display_srcs})

  add_executable(cnstream_test ${test_srcs})

  target_link_libraries(cnstream_test gtest dl cnstream ${CN_LIBS} ${3RDPARTY_LIBS} ${OpenCV_LIBS} ${FFMPEG_LIBRARIES} pthread)

  add_test(cnstream_test ${EXECUTABLE_OUTPUT_PATH}/cnstream_test)
endif()
