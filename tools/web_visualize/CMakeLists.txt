cmake_minimum_required(VERSION 2.8.7)
if(POLICY CMP0046)
  cmake_policy(SET CMP0046 NEW)
endif()
if(POLICY CMP0054)
  cmake_policy(SET CMP0054 NEW)
endif()

set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/src/webserver)
set(WebVisualize_DIR "${PROJECT_SOURCE_DIR}/tools/web_visualize")

include_directories("${PROJECT_SOURCE_DIR}/modules")
include_directories("${PROJECT_SOURCE_DIR}/modules/inference/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/inference2/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/osd/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/source/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/encode/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/track/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/display/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/ipc/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/rtsp_sink/include")
include_directories("${PROJECT_SOURCE_DIR}/modules/util/include")
include_directories("${PROJECT_SOURCE_DIR}/samples/demo")
link_directories("${WebVisualize_DIR}/../../lib")
link_directories("${WebVisualize_DIR}/../../mlu/${MLU_PLATFORM}/libs/${CMAKE_SYSTEM_PROCESSOR}/")

list(APPEND WebVisualize_INCLUDES ${3RDPARTY_INCLUDE_DIRS})
list(APPEND WebVisualize_INCLUDES "${WebVisualize_DIR}/../../include")
list(APPEND WebVisualize_INCLUDES "${WebVisualize_DIR}/../../framework/core/include")

list(APPEND WebVisualize_LIBS cnstream_va cnstream_core)
list(APPEND WebVisualize_LIBS dl ${CN_LIBS} ${3RDPARTY_LIBS}  ${OpenCV_LIBS} ${FFMPEG_LIBRARIES} pthread )

include_directories(${WebVisualize_INCLUDES})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src/pycnstream_backend)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../../samples/demo/ util_src)
list(APPEND service_srcs ${util_src})
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../../samples/demo/preprocess preprocess_srcs)
list(APPEND service_srcs ${preprocess_srcs})
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../../samples/demo/postprocess postprocess_srcs)
list(APPEND service_srcs ${postprocess_srcs})
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/../../samples/demo/obj_filter obj_filter_srcs)
list(APPEND service_srcs ${obj_filter_srcs})

if(build_rtsp_sink)
  link_directories(${PROJECT_SOURCE_DIR}/3rdparty/live555/lib)
endif()

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/pycnstream_backend pyapi_src)
list(APPEND service_srcs ${pyapi_src})
# make python or cpp api
set(make_pythonapi true)
if(make_pythonapi)
  set(MAKE_PYTHONAPI true)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DMAKE_PYTHONAPI")
  message("target :  pycnservice package")
  include_directories("${PROJECT_SOURCE_DIR}/3rdparty/pybind11/include")
  pybind11_add_module(pycnservice SHARED ${service_srcs})
  add_dependencies(pycnservice cnstream_va)
  target_link_libraries(pycnservice PRIVATE ${WebVisualize_LIBS} ${SOURCE_LINK_LIBS})
endif()

# web visualize unitest
set(web_visualize_unitest false)
if(web_visualize_unitest)
  add_subdirectory(unitest)
endif()
